{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\OneDrive\\\\Documents\\\\popt\\\\React-Projects-master\\\\postman-clone\\\\src\\\\components\\\\AddRow.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { TextField, Checkbox, TableCell, TableRow } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  textfield: {\n    width: '100%'\n  },\n  tablecell: {\n    padding: ['2px 5px', '!important'],\n    border: '1px solid rgba(224, 224, 224, 1)',\n    borderCollapse: 'collapse'\n  },\n  checkbox: {\n    padding: ['2px 5px', '!important']\n  }\n});\n\nconst AddRow = _ref => {\n  _s();\n\n  let {\n    addRows,\n    rowId,\n    data,\n    setData\n  } = _ref;\n  const classes = useStyles();\n  const [checkCheckbox, setCheckCheckbox] = useState(false);\n\n  const handleChange = e => {\n    let result = data.filter(entry => entry.id === Number(e.target.name))[0];\n\n    if (!checkCheckbox) {\n      setCheckCheckbox(true);\n      addRows(oldArr => [...oldArr, rowId]);\n      result = { ...result,\n        id: rowId,\n        check: true\n      };\n    } else {\n      setCheckCheckbox(false);\n      result = { ...result,\n        id: rowId,\n        check: false\n      };\n    }\n\n    let index = data.findIndex(value => value.id === Number(e.target.name));\n\n    if (index === -1) {\n      setData(oldArr => [...oldArr, result]);\n    } else {\n      const newArray = Object.assign([...data], {\n        [index]: result\n      });\n      setData(newArray);\n    }\n  };\n\n  const onTextChange = e => {\n    let result = data.filter(entry => entry.id === rowId)[0];\n    result = { ...result,\n      id: rowId,\n      [e.target.name]: e.target.value\n    };\n    let index = data.findIndex(value => value.id === rowId);\n\n    if (index === -1) {\n      setData(oldArr => [...oldArr, result]);\n    } else {\n      const newArray = Object.assign([...data], {\n        [index]: result\n      });\n      setData(newArray);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      className: classes.tablecell,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: checkCheckbox,\n        className: classes.checkbox,\n        size: \"large\",\n        name: rowId,\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: classes.tablecell,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textfield,\n        inputProps: {\n          style: {\n            height: 30,\n            padding: '0 5px'\n          }\n        },\n        name: \"key\",\n        onChange: e => onTextChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      className: classes.tablecell,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textfield,\n        inputProps: {\n          style: {\n            height: 30,\n            padding: '0 5px'\n          }\n        },\n        name: \"value\",\n        onChange: e => onTextChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddRow, \"M9tPRr2qWU9gbpR01SpgXghm13w=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddRow;\nexport default AddRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRow\");","map":{"version":3,"sources":["C:/Users/HOME/OneDrive/Documents/popt/React-Projects-master/postman-clone/src/components/AddRow.jsx"],"names":["useState","TextField","Checkbox","TableCell","TableRow","makeStyles","useStyles","textfield","width","tablecell","padding","border","borderCollapse","checkbox","AddRow","addRows","rowId","data","setData","classes","checkCheckbox","setCheckCheckbox","handleChange","e","result","filter","entry","id","Number","target","name","oldArr","check","index","findIndex","value","newArray","Object","assign","onTextChange","style","height"],"mappings":"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","sourcesContent":["import { useState } from 'react';\n\nimport { TextField, Checkbox, TableCell, TableRow } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    textfield: {\n        width: '100%'\n    },\n    tablecell: {\n        padding: ['2px 5px', '!important'],\n        border: '1px solid rgba(224, 224, 224, 1)',\n        borderCollapse: 'collapse'\n    },\n    checkbox: {\n        padding: ['2px 5px', '!important'],\n    }\n});\n\nconst AddRow = ({ addRows, rowId, data, setData }) => {\n    const classes = useStyles();\n\n    const [checkCheckbox, setCheckCheckbox] = useState(false);\n    \n    const handleChange = (e) => {\n        \n        let result = data.filter(entry => entry.id === Number(e.target.name))[0];\n        \n        if (!checkCheckbox) {\n            setCheckCheckbox(true);\n            addRows(oldArr => [...oldArr, rowId]);\n            result = { ...result, id: rowId, check: true }\n        } else {\n            setCheckCheckbox(false);\n            result = { ...result, id: rowId, check: false }\n        }\n        \n        let index = data.findIndex((value) => value.id === Number(e.target.name));\n        if (index === -1) {\n            setData(oldArr => [...oldArr, result]);\n        } else {\n            const newArray = Object.assign([...data], {\n                [index]: result\n            });\n            setData(newArray)    \n        }\n    }\n    \n    const onTextChange = (e) => {\n        let result = data.filter(entry => entry.id === rowId)[0];\n        result = { ...result, id: rowId, [e.target.name]: e.target.value }\n\n        let index = data.findIndex((value) => value.id === rowId);\n        \n        if (index === -1) {\n            setData(oldArr => [...oldArr, result]);\n        } else {\n            const newArray = Object.assign([...data], {\n                [index]: result\n            });\n            setData(newArray)    \n        }\n    }\n    \n    return (\n        <TableRow>\n            <TableCell className={classes.tablecell}>\n                <Checkbox \n                    checked={checkCheckbox}\n                    className={classes.checkbox} \n                    size='large' \n                    name={rowId}\n                    onChange={(e) => handleChange(e)} />\n            </TableCell>\n            <TableCell className={classes.tablecell}>\n                <TextField className={classes.textfield}\n                    inputProps={{ style: { height: 30, padding: '0 5px' } }}\n                    name=\"key\"\n                    onChange={(e) => onTextChange(e)}\n                />\n            </TableCell>\n            <TableCell className={classes.tablecell}>\n                <TextField className={classes.textfield}\n                    inputProps={{ style: { height: 30, padding: '0 5px' } }}\n                    name=\"value\"\n                    onChange={(e) => onTextChange(e)}\n            /></TableCell>\n        </TableRow>\n    )\n}\n\nexport default AddRow;"]},"metadata":{},"sourceType":"module"}