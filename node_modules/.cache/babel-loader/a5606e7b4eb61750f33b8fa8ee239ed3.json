{"ast":null,"code":"const checkValidJson = text => {\n  if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const checkParams = (formData, jsonText, paramData, headerData, setErrorMsg) => {\n  if (!formData.url) {\n    setErrorMsg('Request URL is empty!');\n    return false;\n  }\n\n  if (!checkValidJson(jsonText)) {\n    setErrorMsg('Text is not valid json');\n    return false;\n  }\n\n  return true;\n};\nexport const getHeadersAndParams = objArr => {\n  let obj = {};\n  objArr.forEach(data => {\n    if (data.hasOwnProperty('check') && data.check) {\n      obj = { ...obj,\n        [data.key]: data.value\n      };\n    }\n  });\n  return obj;\n};","map":{"version":3,"sources":["C:/Users/HOME/OneDrive/Documents/popt/React-Projects-master/postman-clone/src/utils/common-utils.js"],"names":["checkValidJson","text","test","replace","checkParams","formData","jsonText","paramData","headerData","setErrorMsg","url","getHeadersAndParams","objArr","obj","forEach","data","hasOwnProperty","check","key","value"],"mappings":"AACA,MAAMA,cAAc,GAAIC,IAAD,IAAU;AAC7B,MAAI,gBAAgBC,IAAhB,CAAqBD,IAAI,CAACE,OAAL,CAAa,kBAAb,EAAiC,GAAjC,EACrBA,OADqB,CACb,kEADa,EACuD,GADvD,EAErBA,OAFqB,CAEb,sBAFa,EAEW,EAFX,CAArB,CAAJ,EAE0C;AAClC,WAAO,IAAP;AACP,GAJD,MAIK;AACD,WAAO,KAAP;AACH;AACJ,CARD;;AAUA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,WAA5C,KAA4D;AAEnF,MAAG,CAACJ,QAAQ,CAACK,GAAb,EAAkB;AACdD,IAAAA,WAAW,CAAC,uBAAD,CAAX;AACA,WAAO,KAAP;AACH;;AAED,MAAG,CAACT,cAAc,CAACM,QAAD,CAAlB,EAA8B;AAC1BG,IAAAA,WAAW,CAAC,wBAAD,CAAX;AACA,WAAO,KAAP;AACH;;AAED,SAAO,IAAP;AACH,CAbM;AAeP,OAAO,MAAME,mBAAmB,GAAIC,MAAD,IAAY;AAC3C,MAAIC,GAAG,GAAG,EAAV;AACAD,EAAAA,MAAM,CAACE,OAAP,CAAeC,IAAI,IAAI;AACnB,QAAIA,IAAI,CAACC,cAAL,CAAoB,OAApB,KAAgCD,IAAI,CAACE,KAAzC,EAAgD;AAC5CJ,MAAAA,GAAG,GAAG,EAAE,GAAGA,GAAL;AAAU,SAACE,IAAI,CAACG,GAAN,GAAYH,IAAI,CAACI;AAA3B,OAAN;AACH;AACJ,GAJD;AAKA,SAAON,GAAP;AACH,CARM","sourcesContent":["\nconst checkValidJson = (text) => {\n    if (/^[\\],:{}\\s]*$/.test(text.replace(/\\\\[\"\\\\\\/bfnrtu]/g, '@').\n        replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']').\n        replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\n            return true;\n    }else{\n        return false;\n    }\n}\n\nexport const checkParams = (formData, jsonText, paramData, headerData, setErrorMsg) => {\n\n    if(!formData.url) {\n        setErrorMsg('Request URL is empty!');\n        return false;\n    }\n\n    if(!checkValidJson(jsonText)) {\n        setErrorMsg('Text is not valid json');\n        return false;\n    }\n\n    return true;\n}\n\nexport const getHeadersAndParams = (objArr) => {\n    let obj = {};\n    objArr.forEach(data => {\n        if (data.hasOwnProperty('check') && data.check) {\n            obj = { ...obj, [data.key]: data.value };\n        }\n    })\n    return obj;\n}"]},"metadata":{},"sourceType":"module"}